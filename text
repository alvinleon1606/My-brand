const form = document.querySelector('.new-blog-form');
const titleField = document.getElementById('title');
const categoryField = document.getElementById('category');
const imageField = document.getElementById('blog-image');
const tagField = document.getElementById('tags');
const descriptionField = document.getElementById('description');

// Error elements 
const titleError = document.querySelector('.title-error');
const categoryError = document.querySelector('.category-error');
const tagError = document.querySelector('.tag-error');
const imageError = document.querySelector('.file-error');
const descriptionError = document.querySelector('.description-error');

let Blogs = [];


const goToEditBlog = (id) => {
    window.location.href = `editBlog.html?id=${id}` 
}

// delete blog function
const deleteBlog = (id) => {
    Blogs = Blogs.filter((blog) => {
      return blog.id !== id;  
    });
    localStorage.setItem('Blogs', JSON.stringify(Blogs));
    displayBlogs();
}


// display blogs
const displayBlogs = ()=>{

    let blogList = document.querySelector('.blogs-list');
    // show message when we do not have bookmarks
    if (Blogs.length === 0) {
      blogList.innerHTML = 'You do not have blogs';
      return;
    } else {
      blogList.innerHTML = "";
    }

    Blogs.map((blog) => {
        let blogsDiv = document.createElement('div');
        blogsDiv.classList.add('single-blog');
        blogsDiv.classList.add('card');
        blogsDiv.innerHTML = `
                        <img src="../assets/project-1.jpg" alt="" class="blog-img">
                        <h3>${blog.title}</h3>
                        <p>${blog.description}</p>
                        <button onclick="deleteBlog(${blog.id})">Delete</button>
                        <button onclick="goToEditBlog(${blog.id})">Edit</button>
                        `;
        blogList.appendChild(blogsDiv);
      });
}


// Initial document load
document.addEventListener('DOMContentLoaded', function() {
    if (JSON.parse(localStorage.getItem('Blogs'))) {
        Blogs=JSON.parse(localStorage.getItem('Blogs'))
    } 
    displayBlogs()
})

//Create a blog
form.addEventListener('submit', (e) => {
    e.preventDefault();

    const title = titleField.value;
    const category = categoryField.value;
    const image = imageField.value;
    const tag = tagField.value;
    const description = descriptionField.value;

        //Fotm Validations
        const validateInputs = () => {

            if(title ===''){
                titleError.innerHTML='Title can not be Empty';
                titleError.style.color = 'red'
            }
            if(category ===''){
                categoryError.innerHTML='Category can not be Empty';
                categoryError.style.color = 'red'
            }
            if(image ===''){
                imageError.innerHTML='Blog image can not be Empty';
                imageError.style.color = 'red'
            }
            if(tag ===''){
                tagError.innerHTML='Tag can not be Empty';
                tagError.style.color = 'red'
            }
            if(description ===''){
                descriptionError.innerHTML='Description can not be Empty';
                descriptionError.style.color = 'red'
            }

            if(!description==='' && !tag==='' && !category==='' && !title==='' && !image===''){
                // Save data
                const newBlog = {
                    id: Date.now(),
                    title: title,
                    image: image,
                    description: description,
                    tag: tag,
                    category: category
                }
                CreateBlogs(newBlog)
            }
        };
        validateInputs();
});

// Live validations as typing
const descriptionRegex = /^.{10,300}$/; 

descriptionField.addEventListener('input', (e) => {
    const value = e.target.value;
    if (!descriptionRegex.test(value)) {
        descriptionError.innerHTML = 'Description must be between 10 and 300 characters';
        descriptionError.style.color = "red"
    } else {
        descriptionError.innerHTML = '';
    }
});


// Create a blog
const CreateBlogs= (newBlog) => {
    Blogs.push(newBlog);
    localStorage.setItem('Blogs', JSON.stringify(Blogs));
}



